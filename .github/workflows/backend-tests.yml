name: Backend Tests

on:
  workflow_call:

jobs:
  backend-tests:
    environment: testing-backend
    name: Run Backend Tests (Cucumber and Unit Tests)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x backend/gradlew

      - name: Create .env file for testing
        working-directory: backend
        run: |
          echo "POSTGRES_HOST=${{ vars.POSTGRES_HOST }}" > .env
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ vars.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" >> .env
          echo "KEYCLOAK_PORT=${{ vars.KEYCLOAK_PORT }}" >> .env
          echo "KEYCLOAK_ADMIN_USER=${{ secrets.KEYCLOAK_ADMIN_USER }}" >> .env
          echo "KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}" >> .env
          echo "KEYCLOAK_HOSTNAME=${{ vars.KEYCLOAK_HOSTNAME }}" >> .env
          echo "KEYCLOAK_VOLUME_PATH=${{ vars.KEYCLOAK_VOLUME_PATH }}" >> .env
          echo "KEYCLOAK_ISSUER_URI=${{ vars.KEYCLOAK_ISSUER_URI }}" >> .env
          echo "KEYCLOAK_JWK_SET_URI=${{ vars.KEYCLOAK_JWK_SET_URI }}" >> .env
          echo "KEYCLOAK_LOGIN_URI=${{ vars.KEYCLOAK_LOGIN_URI }}" >> .env
          echo "IMS_SHOULD_POPULATE=${{ vars.IMS_SHOULD_POPULATE }}" >> .env

      - name: Start test infrastructure
        working-directory: backend
        run: |
          docker compose --profile test up -d

          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 45

          echo "Checking running containers:"
          docker ps

          echo "Checking service health:"
          docker compose --profile test ps

          # Verify PostgreSQL is ready
          echo "Waiting for PostgreSQL to be ready..."
          timeout 120 bash -c 'until docker exec ims-database-test pg_isready -U imsadmin -d ims; do sleep 2; done'

          # Verify Keycloak is ready
          echo "Waiting for Keycloak to be ready..."
          timeout 180 bash -c 'until curl -f http://localhost:7080/health/ready; do sleep 5; done'

      - name: Clean and build project
        working-directory: backend
        run: |
          echo "Verifying services are still running before build:"
          docker compose --profile test ps
          ./gradlew clean build -x test

      - name: Run Cucumber tests
        working-directory: backend
        run: |
          echo "Verifying services are still running before Cucumber tests:"
          docker compose --profile test ps
          ./gradlew cucumberTest

      - name: Run Unit tests
        working-directory: backend
        if: always()
        run: |
          echo "Verifying services are still running before Unit tests:"
          docker compose --profile test ps
          ./gradlew unitTest

      - name: Stop test infrastructure
        working-directory: backend
        if: always()
        run: |
          echo "Stopping test infrastructure:"
          docker compose --profile test down -v

      - name: Upload Cucumber test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-test-results
          path: |
            backend/build/reports/tests/cucumberTest/index.html
            backend/target/cucumber-reports.html
          retention-days: 30

      - name: Upload Unit test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: backend/build/reports/tests/unitTest/index.html
          retention-days: 30

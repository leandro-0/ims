name: Backend Tests

on:
  workflow_call:

jobs:
  backend-tests:
    environment: testing-backend
    name: "Regression tests for backend: Cucumber and Unit Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres-test:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - ${{ vars.POSTGRES_PORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      keycloak-test:
        image: leandro0/keycloak-test-backend:latest
        ports:
          - ${{ vars.KEYCLOAK_PORT }}:${{ vars.KEYCLOAK_PORT }}
          - 9000:9000
        env:
          KC_HOSTNAME: ${{ vars.KEYCLOAK_HOSTNAME }}
          KC_HOSTNAME_PORT: ${{ vars.KEYCLOAK_PORT }}
          KC_HTTP_PORT: ${{ vars.KEYCLOAK_PORT }}
          KEYCLOAK_PORT: ${{ vars.KEYCLOAK_PORT }}
          KEYCLOAK_ADMIN: ${{ secrets.KEYCLOAK_ADMIN_USER }}
          KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
          KC_HEALTH_ENABLED: "true"
          KC_LOG_LEVEL: info
          KC_HTTP_ENABLED: "true"
          KC_HOSTNAME_STRICT: "false"
        options: >-
          --health-cmd="[ -f /tmp/HealthCheck.java ] || echo 'public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }' > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live"
          --health-interval=15s
          --health-timeout=10s
          --health-retries=15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x backend/gradlew

      - name: Create .env file for testing
        working-directory: backend
        run: |
          echo "POSTGRES_HOST=${{ vars.POSTGRES_HOST }}" > .env
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ vars.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" >> .env
          echo "KEYCLOAK_PORT=${{ vars.KEYCLOAK_PORT }}" >> .env
          echo "KEYCLOAK_ADMIN_USER=${{ secrets.KEYCLOAK_ADMIN_USER }}" >> .env
          echo "KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}" >> .env
          echo "KEYCLOAK_HOSTNAME=${{ vars.KEYCLOAK_HOSTNAME }}" >> .env
          echo "KEYCLOAK_VOLUME_PATH=${{ vars.KEYCLOAK_VOLUME_PATH }}" >> .env
          echo "KEYCLOAK_ISSUER_URI=${{ vars.KEYCLOAK_ISSUER_URI }}" >> .env
          echo "KEYCLOAK_JWK_SET_URI=${{ vars.KEYCLOAK_JWK_SET_URI }}" >> .env
          echo "KEYCLOAK_LOGIN_URI=${{ vars.KEYCLOAK_LOGIN_URI }}" >> .env
          echo "IMS_SHOULD_POPULATE=${{ vars.IMS_SHOULD_POPULATE }}" >> .env

      - name: Clean and build project
        working-directory: backend
        run: ./gradlew clean build -x test

      - name: Run Cucumber tests
        working-directory: backend
        run: ./gradlew cucumberTest

      - name: Run Unit tests
        working-directory: backend
        if: always()
        run: ./gradlew unitTest

      - name: Upload Cucumber test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-test-results
          path: |
            backend/build/reports/tests/cucumberTest/index.html
            backend/target/cucumber-reports.html
          retention-days: 30

      - name: Upload Unit test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: backend/build/reports/tests/unitTest/index.html
          retention-days: 30

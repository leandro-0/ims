services:
  ims-backend:
    container_name: ims-backend
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - ${IMS_BACKEND_PORT:-8080}:8080
    volumes:
      - ./.env:/app/.env
    depends_on:
      - postgres
    profiles:
      - prod
    networks:
      - ims-network

  postgres:
    container_name: ims-database
    image: postgres
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ~/ims-pgsql:/var/lib/postgresql/data
    networks:
      - ims-network
    profiles:
      - dev
      - prod

  keycloak:
    container_name: keycloak-auth
    image: quay.io/keycloak/keycloak:26.2.5
    environment:
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm.json
    ports:
      - "${KEYCLOAK_PORT:-7080}:${KEYCLOAK_PORT:-7080}"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${KEYCLOAK_HOSTNAME:-localhost}:${KEYCLOAK_PORT:-7080}/health/ready",
        ]
      interval: 15s
      timeout: 2s
      retries: 15
    networks:
      - ims-network
    command:
      ["start-dev", "--http-port", "${KEYCLOAK_PORT:-7080}", "--import-realm"]
    volumes:
      - ${KEYCLOAK_VOLUME_PATH}:/opt/keycloak/data
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    profiles:
      - dev
      - prod

  ims-frontend:
    container_name: ims-frontend
    restart: always
    build:
      context: ../frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - AUTH_SECRET=${AUTH_SECRET}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_ISSUER=${KEYCLOAK_ISSUER}
      - KEYCLOAK_ISSUER_SERVER=${KEYCLOAK_ISSUER_SERVER}
    ports:
      - ${IMS_FRONTEND_PORT:-3000}:3000
    depends_on:
      - ims-backend
      - keycloak
    networks:
      - ims-network
    profiles:
      - prod

  postgres-test:
    container_name: ims-database-test
    image: postgres
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - ims-network
    profiles:
      - test

  keycloak-test:
    container_name: keycloak-auth-test
    image: quay.io/keycloak/keycloak:26.2.5
    environment:
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-7080}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm.json
    ports:
      - "${KEYCLOAK_PORT:-7080}:${KEYCLOAK_PORT:-7080}"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${KEYCLOAK_HOSTNAME:-localhost}:${KEYCLOAK_PORT:-7080}/health/ready",
        ]
      interval: 15s
      timeout: 2s
      retries: 15
    command:
      ["start-dev", "--http-port", "${KEYCLOAK_PORT:-7080}", "--import-realm"]
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    profiles:
      - test
    networks:
      - ims-network

networks:
  ims-network:
    driver: bridge
